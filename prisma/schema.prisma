// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  clerkUserId String   @unique
  email     String   @unique
  name      String?
  imageUrl String?
  weight    Float?   // in kg
  height    Float?   // in cm
  age       Int?
  gender    String?  // Male/Female
  activityLevel String? // Sedentary/Light/Moderate/Active/Very Active
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Records   Record[]
  JournalEntries JournalEntry[]
}

enum RecordType {
  SLEEP
  DIET
  MOOD
  STUDY
}

model Record {
  id        String     @id @default(uuid())
  type      RecordType
  text      String?
  amount    Float
  date      DateTime   @default(now())
  userId    String
  user      User       @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
  createdAt DateTime   @default(now())
  
  @@unique([userId, date, type])
  @@index([userId])
}

model JournalEntry {
  id        String   @id @default(uuid())
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@index([userId])
}